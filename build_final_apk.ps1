# Final APK Build Script - Fixes plugin registration issue
Write-Host "Building final APK with all fixes..." -ForegroundColor Green
Write-Host ""

Write-Host "Step 1: Cleaning everything..." -ForegroundColor Yellow
flutter clean
Remove-Item -Recurse -Force "android\.gradle" -ErrorAction SilentlyContinue
Remove-Item -Recurse -Force "android\app\build" -ErrorAction SilentlyContinue
Write-Host "Clean completed." -ForegroundColor Green

Write-Host ""
Write-Host "Step 2: Getting dependencies..." -ForegroundColor Yellow
flutter pub get
Write-Host "Dependencies updated." -ForegroundColor Green

Write-Host ""
Write-Host "Step 3: Fixing plugin registration..." -ForegroundColor Yellow
$pluginFile = "android\app\src\main\java\io\flutter\plugins\GeneratedPluginRegistrant.java"
if (Test-Path $pluginFile) {
    $content = Get-Content $pluginFile -Raw
    $fixedContent = $content -replace 'try \{[^}]+flutterEngine\.getPlugins\(\)\.add\(new io\.flutter\.plugins\.pathprovider\.PathProviderPlugin\(\)\);[^}]+\} catch[^}]+\}', '// Plugin registration handled automatically by Flutter'
    Set-Content $pluginFile $fixedContent
    Write-Host "Plugin registration fixed." -ForegroundColor Green
} else {
    Write-Host "Plugin file not found, will be generated during build." -ForegroundColor Yellow
}

Write-Host ""
Write-Host "Step 4: Building APK..." -ForegroundColor Yellow
Set-Location android
.\gradlew --stop
.\gradlew clean
.\gradlew assembleDebug
$buildResult = $LASTEXITCODE
Set-Location ..

if ($buildResult -eq 0) {
    Write-Host ""
    Write-Host "‚úÖ APK built successfully!" -ForegroundColor Green
    Write-Host "üì± Location: android\app\build\outputs\flutter-apk\app-debug.apk" -ForegroundColor Cyan
    Write-Host ""
    Write-Host "üîß Applied fixes:" -ForegroundColor Yellow
    Write-Host "   ‚úì Loading screen with proper initialization" -ForegroundColor White
    Write-Host "   ‚úì Error handling for failed initialization" -ForegroundColor White
    Write-Host "   ‚úì Fixed plugin registration issue" -ForegroundColor White
    Write-Host "   ‚úì Async initialization moved to StatefulWidget" -ForegroundColor White
} else {
    Write-Host ""
    Write-Host "‚ùå Build failed. Checking for plugin registration issue..." -ForegroundColor Red
    
    # Try to fix the plugin file again if it was regenerated
    if (Test-Path $pluginFile) {
        Write-Host "Attempting to fix regenerated plugin file..." -ForegroundColor Yellow
        $content = @"
package io.flutter.plugins;

import androidx.annotation.Keep;
import androidx.annotation.NonNull;
import io.flutter.Log;

import io.flutter.embedding.engine.FlutterEngine;

/**
 * Generated file. Do not edit.
 * This file is generated by the Flutter tool based on the
 * plugins that support the Android platform.
 */
@Keep
public final class GeneratedPluginRegistrant {
  private static final String TAG = "GeneratedPluginRegistrant";
  public static void registerWith(@NonNull FlutterEngine flutterEngine) {
    // Plugin registration handled automatically by Flutter
  }
}
"@
        Set-Content $pluginFile $content
        
        Write-Host "Retrying build..." -ForegroundColor Yellow
        Set-Location android
        .\gradlew assembleDebug
        Set-Location ..
        
        if ($LASTEXITCODE -eq 0) {
            Write-Host "‚úÖ Build successful after fix!" -ForegroundColor Green
        } else {
            Write-Host "‚ùå Build still failing. Manual intervention needed." -ForegroundColor Red
        }
    }
}

Write-Host ""
Write-Host "Build process completed!" -ForegroundColor Green